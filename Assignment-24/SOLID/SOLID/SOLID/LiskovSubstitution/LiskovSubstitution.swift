//
//  LiskovSubstitution.swift
//  SOLID
//
//  Created by irakli kharshiladze on 13.11.24.
//
//MARK: ლისკოვის პრინციპის თანახმად, როდესაც ვაწყობთ კლასის იერარქიას მნიშვნელოვანია რომ შვილობილი კლასი იყოს მისი სუპერ კლასის ჭეშმარიტი გაფართოება და არა რაიმე საერთოდ ახალი მიდგომა. ამავდროულად შვილობილმა კლასმა არ უნდა შეცვალოს(override) სუპერ კლასის მეთოდები რაც შეცვლის მშოვლის ქმედებას ან კიდევ არ უნდა დაამატოს ახალი მეთოდები რომელიც არ არის სუპერკლასში.

protocol Flyable {
    func fly()
}

class TransportLSP {
    // ზოგადი სატრანსპორტო საშუალება
}

class Plane: TransportLSP, Flyable {
    func fly() {
        print("I'm flying!")
    }
}

class BusLSP: Transport {
    // ავტობუსი ვერ დაფრინავს შესაბამისად ვერ აკმაყოფილებს "Flyable" პროტოკოლს
}
